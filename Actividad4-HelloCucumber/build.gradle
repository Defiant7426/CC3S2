/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details, take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/current/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section, you declare where to find the dependencies of your project
repositories {
    // Use mavenCentral for resolving your dependencies.
    mavenCentral()
    google()
}

// Configure the test task to use JUnit Platform (JUnit 5)
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:33.1.0-jre'

    // Use JUnit Jupiter API for unit testing with JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // For backward compatibility with JUnit 4 tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.2'

    // Cucumber for BDD
    testImplementation 'io.cucumber:cucumber-java:7.16.1'
    testImplementation 'io.cucumber:cucumber-junit:7.16.1'
}
